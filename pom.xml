<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>  <!-- rebuild -->

    <groupId>com.sparkutils</groupId>
    <artifactId>kogito-4-spark_${dbrCompatVersion}${sparkCompatVersion}_${scalaCompatVersion}</artifactId>

    <packaging>jar</packaging>
    <version>${revision}</version>
    <name>Kogito 4 Spark</name>
    <description>A Kogito implementation for the dmn-4-spark API</description>
    <url>https://sparkutils.github.io/kogito-4-spark/</url>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://github.com/sparkutils/kogito-4-spark/blob/main/LICENSE</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Chris Twiner</name>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git://github.com/sparkutils/kogito-4-spark.git</connection>
        <developerConnection>scm:git:ssh://github.com:sparkutils/kogito-4-spark.git</developerConnection>
        <url>http://github.com/sparkutils/kogito-4-spark/tree/master</url>
    </scm>
    <profiles>
        <profile>
            <id>scala_2.12.18</id> <!-- 4 was built against this, seemingly dropped since Sep 23 -->
            <properties>
                <scalaVersion>2.12.18</scalaVersion>
                <scalaCompatVersion>2.12</scalaCompatVersion>
            </properties>
        </profile>
        <profile>
            <id>scala_2.13.12</id><!-- from jdk 21 / 4 onwards only -->
            <properties>
                <scalaVersion>2.13.12</scalaVersion>
                <scalaCompatVersion>2.13</scalaCompatVersion>
                <scalatestVersion>3.0.8</scalatestVersion>
            </properties>
        </profile>
        <profile>
            <id>Spark350</id>
            <properties>
                <shimRuntime>3.5.0.oss</shimRuntime>
                <shimCompilationRuntime>3.5.0.oss</shimCompilationRuntime>
                <dbrCompatVersion>3.5.0.oss_</dbrCompatVersion>
                <sparkVersion>3.5.0</sparkVersion>
                <sparkCompatVersion>3.5</sparkCompatVersion>
                <profileDir>3.5.0</profileDir>
                <jacksonVersion>2.15.2</jacksonVersion> <!-- scalameter dependency is 2.9.10 so perf tests runs need to change it -->
                <guavaVersion>15.0</guavaVersion> <!-- databricks runtime version -->
                <parserCombinatorVersion>1.1.2</parserCombinatorVersion> <!-- databricks runtime version -->
                <elidebelow>2</elidebelow>
                <refinedVersion>0.9.28</refinedVersion>
                <deltaCoreVersion>3.0.0</deltaCoreVersion>
                <deltaArtifact>spark</deltaArtifact>
                <snakeVersion>2.0</snakeVersion>

                <!--<scalatestVersion>3.2.15</scalatestVersion>  databricks runtime version -->
            </properties>
        </profile>
        <profile>
            <id>Spark4</id>
            <properties>
                <shimRuntime>4.0.0.oss</shimRuntime>
                <shimCompilationRuntime>4.0.0.oss</shimCompilationRuntime>
                <dbrCompatVersion>4.0.0.oss_</dbrCompatVersion>
                <sparkVersion>4.1.0-SNAPSHOT</sparkVersion>
                <sparkCompatVersion>4.1</sparkCompatVersion>
                <profileDir>4.0.0</profileDir>
                <jacksonVersion>2.15.2</jacksonVersion> <!-- scalameter dependency is 2.9.10 so perf tests runs need to change it -->
                <guavaVersion>15.0</guavaVersion> <!-- databricks runtime version -->
                <parserCombinatorVersion>1.1.2</parserCombinatorVersion> <!-- databricks runtime version -->
                <elidebelow>2</elidebelow>
                <refinedVersion>0.9.28</refinedVersion>
                <deltaCoreVersion>3.0.0</deltaCoreVersion>
                <deltaArtifact>spark</deltaArtifact>
                <snakeVersion>2.0</snakeVersion>

                <!--<scalatestVersion>3.2.15</scalatestVersion>  databricks runtime version -->
            </properties>
        </profile>
        <profile>
            <id>14.0.dbr</id>
            <properties>
                <shimRuntime>14.0.dbr</shimRuntime>
                <shimCompilationRuntime>14.0.dbr</shimCompilationRuntime>
                <dbrCompatVersion>14.0.dbr_</dbrCompatVersion>
                <sparkVersion>3.5.0</sparkVersion>
                <sparkCompatVersion>3.5</sparkCompatVersion>
                <profileDir>14.0.dbr</profileDir>
                <jacksonVersion>2.14.2</jacksonVersion> <!-- scalameter dependency is 2.9.10 so perf tests runs need to change it -->
                <guavaVersion>15.0</guavaVersion> <!-- databricks runtime version -->
                <parserCombinatorVersion>1.1.2</parserCombinatorVersion> <!-- databricks runtime version -->
                <elidebelow>2</elidebelow>
                <refinedVersion>0.9.28</refinedVersion>
                <snakeVersion>2.0</snakeVersion>
            </properties>
        </profile>
        <profile>
            <id>14.3.dbr</id>
            <properties>
                <shimRuntime>14.3.dbr</shimRuntime>
                <shimCompilationRuntime>14.3.dbr</shimCompilationRuntime>
                <dbrCompatVersion>14.3.dbr_</dbrCompatVersion>
                <sparkVersion>3.5.0</sparkVersion>
                <sparkCompatVersion>3.5</sparkCompatVersion>
                <profileDir>14.3.dbr</profileDir>
                <jacksonVersion>2.14.2</jacksonVersion> <!-- scalameter dependency is 2.9.10 so perf tests runs need to change it -->
                <guavaVersion>15.0</guavaVersion> <!-- databricks runtime version -->
                <parserCombinatorVersion>1.1.2</parserCombinatorVersion> <!-- databricks runtime version -->
                <elidebelow>2</elidebelow>
                <refinedVersion>0.9.28</refinedVersion>
                <snakeVersion>2.0</snakeVersion>
            </properties>
        </profile>
        <profile>
            <id>15.4.dbr</id>
            <properties>
                <shimRuntime>15.4.dbr</shimRuntime>
                <shimCompilationRuntime>15.4.dbr</shimCompilationRuntime>
                <dbrCompatVersion>15.4.dbr_</dbrCompatVersion>
                <sparkVersion>3.5.0</sparkVersion>
                <sparkCompatVersion>3.5</sparkCompatVersion>
                <profileDir>15.4.dbr</profileDir>
                <jacksonVersion>2.14.2</jacksonVersion> <!-- scalameter dependency is 2.9.10 so perf tests runs need to change it -->
                <guavaVersion>15.0</guavaVersion> <!-- databricks runtime version -->
                <parserCombinatorVersion>1.1.2</parserCombinatorVersion> <!-- databricks runtime version -->
                <elidebelow>2</elidebelow>
                <refinedVersion>0.9.28</refinedVersion>
                <snakeVersion>2.0</snakeVersion>
            </properties>
        </profile>
        <profile>
            <id>16.3.dbr</id>
            <properties>
                <shimRuntime>16.3.dbr</shimRuntime>
                <shimCompilationRuntime>16.3.dbr</shimCompilationRuntime>
                <dbrCompatVersion>16.3.dbr_</dbrCompatVersion>
                <sparkVersion>3.5.0</sparkVersion>
                <sparkCompatVersion>3.5</sparkCompatVersion>
                <profileDir>16.3.dbr</profileDir>
                <jacksonVersion>2.14.2</jacksonVersion> <!-- scalameter dependency is 2.9.10 so perf tests runs need to change it -->
                <guavaVersion>15.0</guavaVersion> <!-- databricks runtime version -->
                <parserCombinatorVersion>1.1.2</parserCombinatorVersion> <!-- databricks runtime version -->
                <elidebelow>2</elidebelow>
                <refinedVersion>0.9.28</refinedVersion>
                <snakeVersion>2.0</snakeVersion>
            </properties>
        </profile>
    </profiles>

    <properties>
        <revision>0.0.1-RC6</revision>

        <mavenFlattenPluginVersion>1.2.7</mavenFlattenPluginVersion>
        <mavenProjectInfoReportsPluginVersion>3.4.5</mavenProjectInfoReportsPluginVersion>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <shapelessVersion>2.3.2</shapelessVersion>
        <scalaMeterVersion>0.19</scalaMeterVersion>
        <httpClientVersion>4.5.8</httpClientVersion>
        <dbutilsVersion>0.0.3</dbutilsVersion>
        <scalatestVersion>3.0.7</scalatestVersion>
        <apacheCommons>3.5</apacheCommons>
        <junitVersion>4.12</junitVersion>
        <dependencyPluginVersion>3.1.1</dependencyPluginVersion>
        <scalaCompilerPluginVersion>4.9.5</scalaCompilerPluginVersion>
        <mavenCompilerPluginVersion>3.8.1</mavenCompilerPluginVersion>
        <mavenJarPluginVersion>3.2.0</mavenJarPluginVersion>
        <mavenShadePluginVersion>3.2.1</mavenShadePluginVersion>
        <mavenSitePluginVersion>3.7.1</mavenSitePluginVersion>
        <mavenProjectInfoReportsVersion>3.0.0</mavenProjectInfoReportsVersion>
        <surefirePluginVersion>2.22.2</surefirePluginVersion>
        <surefireReportPluginVersion>2.22.2</surefireReportPluginVersion>
        <scoverage.plugin.version>1.4.11</scoverage.plugin.version>
        <mavenAssemblyPluginVersion>2.5.3</mavenAssemblyPluginVersion>
        <deequ.version>1.0.2</deequ.version>
        <circeVersion>0.11.2</circeVersion>
        <rngVersion>1.3</rngVersion>
        <zeroAllocHashingVersion>0.15</zeroAllocHashingVersion>
        <scalaCrossPluginVersion>0.3.0</scalaCrossPluginVersion>
        <naked-local-fs-version>0.1.0</naked-local-fs-version>

        <deltaCoreVersion>0.6.1</deltaCoreVersion> <!-- for dbr builds -->
        <deltaArtifact>core</deltaArtifact>
        <!-- for oss builds -->
        <snakeVersion>1.33</snakeVersion>

        <shimCompilationVersion>0.2.0-RC1</shimCompilationVersion>
        <shimRuntimeVersion>0.2.0-RC1</shimRuntimeVersion>

        <dmn4SparkVersion>0.0.1-RC4</dmn4SparkVersion>
        <shadedKogitoVersion>0.0.12</shadedKogitoVersion>

        <framelessVersion>0.17.0</framelessVersion>
        <framelessRuntime>sparkutils_0.17.0-${sparkCompatVersion}</framelessRuntime>
        <framelessOrg>com.sparkutils</framelessOrg>
    </properties>
    <!--
    <repositories>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>apache_snaps</id>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>
-->
    <distributionManagement>
        <repository>
            <id>ossrh</id>
            <name>Quality Release Repository</name>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>ossrh</id>
            <name>Quality Snapshot Repository</name>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>com.sparkutils</groupId>
            <artifactId>shim_compilation_${shimCompilationRuntime}_${sparkCompatVersion}_${scalaCompatVersion}</artifactId>
            <version>${shimCompilationVersion}</version>
            <scope>provided</scope>
            <classifier>sources</classifier>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-sql_${scalaCompatVersion}</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sparkutils</groupId>
            <artifactId>shim_runtime_${shimRuntime}_${sparkCompatVersion}_${scalaCompatVersion}</artifactId>
            <version>${shimRuntimeVersion}</version>
        </dependency>
        <dependency>
            <groupId>${framelessOrg}</groupId>
            <!-- framelessCoreCompatVersion is used as sparkutils.frameless always publishes the spark major.minor -->
            <artifactId>frameless-core_${sparkCompatVersion}_${scalaCompatVersion}</artifactId>
            <version>${framelessVersion}</version>
            <exclusions>
                <!-- exclude the shim -->
                <exclusion>
                    <groupId>com.sparkutils</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${framelessOrg}</groupId>
            <!-- framelessCoreCompatVersion is used as sparkutils.frameless always publishes the spark major.minor -->
            <artifactId>frameless-dataset_${sparkCompatVersion}_${scalaCompatVersion}</artifactId>
            <version>${framelessVersion}</version>
            <exclusions>
                <!-- exclude the shim -->
                <exclusion>
                    <groupId>com.sparkutils</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scalaVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scalaCompatVersion}</artifactId>
            <version>${scalatestVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junitVersion}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scalaVersion}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>com.sparkutils</groupId>
            <artifactId>kogito_shaded</artifactId>
            <version>${shadedKogitoVersion}</version>
            <!--
            <exclusions>
                <exclusion>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-runtime</artifactId> <! - - 4.10.1 from here, 4.9.3 needed by spark - ->
                </exclusion>
            </exclusions>-->
        </dependency>

        <dependency>
            <groupId>com.sparkutils</groupId>
            <artifactId>dmn-4-spark_${dbrCompatVersion}${sparkCompatVersion}_${scalaCompatVersion}</artifactId>
            <version>${dmn4SparkVersion}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scalaCompatVersion}</artifactId>
            <version>${sparkVersion}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_${scalaCompatVersion}</artifactId>
            <version>${jacksonVersion}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jacksonVersion}</version>
        </dependency>
    </dependencies>

    <build>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mavenCompilerPluginVersion}</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/scala</source>
                                <source>src/main/${profileDir}-scala</source>
                                <source>${project.build.directory}/shim_compilation_${shimCompilationRuntime}_${sparkCompatVersion}_${scalaCompatVersion}</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>for-scaladocs-etc</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/scala</source>
                                <source>src/main/${profileDir}-scala</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/scala</source>
                                <source>src/test/${profileDir}-scala</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scalaCompilerPluginVersion}</version>
                <executions>
                    <execution>
                        <id>scala-compile</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <release>18</release>
                            <args>
                                <arg>-feature</arg>
                                <arg>-deprecation</arg>
                                <arg>-Xelide-below</arg>
                                <arg>${elidebelow}</arg>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                                <arg>-g:vars</arg>
                                <!-- <arg>-Ylog-classpath</arg> -->
                            </args>
                            <recompileMode>all</recompileMode>
                            <scalaCompatVersion>${scalaCompatVersion}</scalaCompatVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                    </execution>
                    <!-- <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution> -->
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${mavenSitePluginVersion}</version>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${dependencyPluginVersion}</version>
                <executions> <!-- maven scala plugin uses a set to store classpath, it doesn't follow maven's so we need to use the source -->
                    <execution>
                        <id>unpack</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.sparkutils</groupId>
                                    <artifactId>shim_compilation_${shimCompilationRuntime}_${sparkCompatVersion}_${scalaCompatVersion}</artifactId>
                                    <version>${shimCompilationVersion}</version>

                                    <classifier>sources</classifier>
                                    <type>jar</type>

                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/shim_compilation_${shimCompilationRuntime}_${sparkCompatVersion}_${scalaCompatVersion}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefirePluginVersion}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <argLine>-Xmx4g</argLine>
                    <systemPropertyVariables>
                        <org.xerial.snappy.tempdir>${java.io.tmpdir}/teamcity/megdp/extrajars</org.xerial.snappy.tempdir>
                        <buildDirectory>${project.build.directory}</buildDirectory>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${mavenProjectInfoReportsPluginVersion}</version>
            </plugin>

            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <configuration>
                    <scalaVersion>${scalaVersion}</scalaVersion>
                    <!-- compat layer is tested via the normal code,
                         only pre-resolution plans are anywhere near test worthy -->
                    <excludedPackages>org.apache.spark.sql</excludedPackages>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${mavenJarPluginVersion}</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Build-Time>${maven.build.timestamp}</Build-Time>
                        </manifestEntries>
                        <manifestSections>
                            <manifestSection>
                                <name>Versions</name>
                                <manifestEntries>
                                    <Project-Version>${project.version}</Project-Version>
                                    <Project-Git-Hash>${GITHUB_SHA}</Project-Git-Hash>
                                    <Project-CI-Branch>${GITHUB_BASE_REF}</Project-CI-Branch>
                                    <Project-CI-Run-ID>${GITHUB_RUN_ID}</Project-CI-Run-ID>
                                    <Project-URL>${GITHUB_REPOSITORY}</Project-URL>
                                </manifestEntries>
                            </manifestSection>
                        </manifestSections>
                    </archive>
                    <excludes>
                        <!-- many dbr requires faking the source, we should not include the output -->
                        <exclude>org/apache/spark/sql/catalyst/**</exclude>
                        <exclude>org/apache/spark/sql/internal/**</exclude>
                        <!-- shouldn't be there, really bad for multi-module projects -->
                        <exclude>log4j2.xml</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${mavenFlattenPluginVersion}</version>
                <configuration>
                    <flattenMode>oss</flattenMode>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                        <configuration>
                            <!-- Prevent gpg from using pinentry programs -->
                            <gpgArguments>
                                <arg>--pinentry-mode</arg>
                                <arg>loopback</arg>
                            </gpgArguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.13</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    <stagingProgressTimeoutMinutes>45</stagingProgressTimeoutMinutes>
                </configuration>
            </plugin>
        </plugins>

    </build>
    <reporting>
        <excludeDefaults>true</excludeDefaults>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${surefireReportPluginVersion}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${mavenProjectInfoReportsVersion}</version>
            </plugin>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <!-- <aggregate>true</aggregate> -->
                    <aggregateOnly>true</aggregateOnly>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scalaCompilerPluginVersion}</version>
                <configuration>
                    <args>
                        <arg>-diagrams</arg>
                        <arg>-diagrams-debug</arg>
                        <arg>-diagrams-dot-timeout</arg>
                        <arg>40</arg> <!-- default is 10s and it may not be enough, the basic things which have issue _ARE_ rendering -->
                        <arg>-diagrams-dot-path</arg>
                        <arg>./dott</arg>
                        <!-- <arg>-diagrams-dot-restart</arg>
                        <arg>40</arg> default is 5 the error is not stopped it just makes the build last for ever -->
                    </args>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
