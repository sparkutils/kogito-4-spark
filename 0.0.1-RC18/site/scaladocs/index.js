Index.PACKAGES = {"com.sparkutils.dmn.kogito" : [{"name" : "com.sparkutils.dmn.kogito.ContextProviderProxy", "shortDescription" : "When a type is not provided attempt to late bind the type", "members_case class" : [{"label" : "resultType", "tail" : ": Class[Any]", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.resultType", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#resultType:Class[Any]", "kind" : "val"}, {"label" : "withNewChildInternal", "tail" : "(newChild: Expression): Expression", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.withNewChildInternal", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#withNewChildInternal(newChild:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.doGenCode", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "nullSafeContextEval", "tail" : "(input: Any): Any", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.nullSafeContextEval", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#nullSafeContextEval(input:Any):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.eval", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.ContextProviderProxy#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": Map[String, String]", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.config", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#config:Map[String,String]", "kind" : "val"}, {"label" : "child", "tail" : ": Expression", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.child", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#child:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "stillSetWhenNull", "tail" : ": Boolean", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.stillSetWhenNull", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#stillSetWhenNull:Boolean", "kind" : "val"}, {"label" : "contextPath", "tail" : ": DMNContextPath", "member" : "com.sparkutils.dmn.kogito.ContextProviderProxy.contextPath", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#contextPath:com.sparkutils.dmn.DMNContextPath", "kind" : "val"}, {"label" : "genContext", "tail" : "(ctx: CodegenContext): (String, String)", "member" : "com.sparkutils.dmn.DMNContextProvider.genContext", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#genContext(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):(String,String)", "kind" : "def"}, {"label" : "nullSafeContextCodeGen", "tail" : "(child: Expression, ctx: CodegenContext, ev: ExprCode, contextPath: String, f: (String) ⇒ String): ExprCode", "member" : "com.sparkutils.dmn.DMNContextProvider.nullSafeContextCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#nullSafeContextCodeGen(child:org.apache.spark.sql.catalyst.expressions.Expression,ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,contextPath:String,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "nullSafeContextEval", "tail" : "(child: Expression, input: Any): Any", "member" : "com.sparkutils.dmn.DMNContextProvider.nullSafeContextEval", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#nullSafeContextEval(child:org.apache.spark.sql.catalyst.expressions.Expression,input:Any):Any", "kind" : "def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.DMNContextProvider.foldable", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#foldable:Boolean", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "com.sparkutils.dmn.DMNContextProvider.dataType", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "nullSafeCodeGen", "tail" : "(ctx: CodegenContext, ev: ExprCode, f: (String) ⇒ String): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.nullSafeCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#nullSafeCodeGen(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "defineCodeGen", "tail" : "(ctx: CodegenContext, ev: ExprCode, f: (String) ⇒ String): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.defineCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#defineCodeGen(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "nullSafeEval", "tail" : "(input: Any): Any", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.nullSafeEval", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#nullSafeEval(input:Any):Any", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.nullable", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#nullable:Boolean", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.withNewChildrenInternal", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "final def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.mapChildren", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.children", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#children:Seq[T]", "kind" : "final lazy val"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/ContextProviderProxy.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.ContextProviders", "shortDescription" : "", "object" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/ContextProviders$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.sparkutils.dmn.kogito.KogitoDDLResult", "shortDescription" : "", "members_case class" : [{"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.doGenCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.eval", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "setStatuses", "tail" : "(tres: GenericInternalRow, res: org.kie.dmn.api.core.DMNResult): GenericInternalRow", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.setStatuses", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#setStatuses(tres:org.apache.spark.sql.catalyst.expressions.GenericInternalRow,res:org.kie.dmn.api.core.DMNResult):org.apache.spark.sql.catalyst.expressions.GenericInternalRow", "kind" : "def"}, {"label" : "withDebug", "tail" : "(res: org.kie.dmn.api.core.DMNResult, ires: GenericInternalRow): GenericInternalRow", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.withDebug", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#withDebug(res:org.kie.dmn.api.core.DMNResult,ires:org.apache.spark.sql.catalyst.expressions.GenericInternalRow):org.apache.spark.sql.catalyst.expressions.GenericInternalRow", "kind" : "def"}, {"label" : "process", "tail" : "(res: org.kie.dmn.api.core.DMNResult): Any", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.process", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#process(res:org.kie.dmn.api.core.DMNResult):Any", "kind" : "def"}, {"label" : "evalStatus", "tail" : ": Array[(StructField, Int)]", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.evalStatus", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#evalStatus:Array[(org.apache.spark.sql.types.StructField,Int)]", "kind" : "lazy val"}, {"label" : "getter", "tail" : ": Getter", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.getter", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#getter:com.sparkutils.dmn.kogito.types.ResultInterfaces.Getter", "kind" : "lazy val"}, {"member" : "com.sparkutils.dmn.kogito.KogitoDDLResult#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": Map[String, String]", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.config", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#config:Map[String,String]", "kind" : "val"}, {"label" : "underlyingType", "tail" : ": StructType", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.underlyingType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#underlyingType:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "debug", "tail" : ": Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoDDLResult.debug", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#debug:Boolean", "kind" : "val"}, {"label" : "decisionMap", "tail" : "(ctx: CodegenContext, decisionResults: String, fullProxy: Boolean): ExprCode", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.decisionMap", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#decisionMap(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,decisionResults:String,fullProxy:Boolean):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "kogitoResultStr", "tail" : "(): String", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.kogitoResultStr", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#kogitoResultStr:String", "kind" : "def"}, {"label" : "process", "tail" : "(dmnResult: DMNResult): Any", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.process", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#process(dmnResult:com.sparkutils.dmn.DMNResult):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.dataType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "debugDDL", "tail" : ": ArrayType", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.debugDDL", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#debugDDL:org.apache.spark.sql.types.ArrayType", "kind" : "val"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.nullable", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#nullable:Boolean", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.withNewChildrenInternal", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.mapChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.children", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#children:Seq[T]", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoDDLResult.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoDMNContext", "shortDescription" : "", "members_case class" : [{"label" : "set", "tail" : "(path: DMNContextPath, data: Any): Unit", "member" : "com.sparkutils.dmn.kogito.KogitoDMNContext.set", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#set(path:com.sparkutils.dmn.DMNContextPath,data:Any):Unit", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.KogitoDMNContext#<init>", "error" : "unsupported entity"}, {"label" : "ctx", "tail" : ": org.kie.dmn.api.core.DMNContext", "member" : "com.sparkutils.dmn.kogito.KogitoDMNContext.ctx", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#ctx:org.kie.dmn.api.core.DMNContext", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContext.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoDMNContextPath", "shortDescription" : "", "members_case class" : [{"member" : "com.sparkutils.dmn.kogito.KogitoDMNContextPath#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoDMNContextPath.path", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#path:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNContextPath.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoDMNModel", "shortDescription" : "Represents an executable DMN Model", "members_case class" : [{"label" : "evaluateDecisionService", "tail" : "(ctx: DMNContext, service: String): DMNResult", "member" : "com.sparkutils.dmn.kogito.KogitoDMNModel.evaluateDecisionService", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#evaluateDecisionService(ctx:com.sparkutils.dmn.DMNContext,service:String):com.sparkutils.dmn.DMNResult", "kind" : "def"}, {"label" : "evaluateAll", "tail" : "(ctx: DMNContext): DMNResult", "member" : "com.sparkutils.dmn.kogito.KogitoDMNModel.evaluateAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#evaluateAll(ctx:com.sparkutils.dmn.DMNContext):com.sparkutils.dmn.DMNResult", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.KogitoDMNModel#<init>", "error" : "unsupported entity"}, {"label" : "runtime", "tail" : ": org.kie.dmn.api.core.DMNRuntime", "member" : "com.sparkutils.dmn.kogito.KogitoDMNModel.runtime", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#runtime:org.kie.dmn.api.core.DMNRuntime", "kind" : "val"}, {"label" : "model", "tail" : ": org.kie.dmn.api.core.DMNModel", "member" : "com.sparkutils.dmn.kogito.KogitoDMNModel.model", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#model:org.kie.dmn.api.core.DMNModel", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNModel.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoDMNRepository", "shortDescription" : "Represents a repository of DMN, this is the actual root provider", "members_class" : [{"label" : "resultProviderForType", "tail" : "(resultProviderType: String, debug: Boolean, dmnConfiguration: DMNConfiguration): DMNResultProvider", "member" : "com.sparkutils.dmn.kogito.KogitoDMNRepository.resultProviderForType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#resultProviderForType(resultProviderType:String,debug:Boolean,dmnConfiguration:com.sparkutils.dmn.DMNConfiguration):com.sparkutils.dmn.DMNResultProvider", "kind" : "def"}, {"label" : "providerForType", "tail" : "(inputField: DMNInputField, debug: Boolean, dmnConfiguration: DMNConfiguration): DMNContextProvider[_]", "member" : "com.sparkutils.dmn.kogito.KogitoDMNRepository.providerForType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#providerForType(inputField:com.sparkutils.dmn.DMNInputField,debug:Boolean,dmnConfiguration:com.sparkutils.dmn.DMNConfiguration):com.sparkutils.dmn.DMNContextProvider[_]", "kind" : "def"}, {"label" : "supportsDecisionService", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoDMNRepository.supportsDecisionService", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#supportsDecisionService:Boolean", "kind" : "def"}, {"label" : "dmnRuntimeFor", "tail" : "(dmnFiles: Seq[DMNFile], dmnConfiguration: DMNConfiguration): DMNRuntime", "member" : "com.sparkutils.dmn.kogito.KogitoDMNRepository.dmnRuntimeFor", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#dmnRuntimeFor(dmnFiles:scala.collection.immutable.Seq[com.sparkutils.dmn.DMNFile],dmnConfiguration:com.sparkutils.dmn.DMNConfiguration):com.sparkutils.dmn.DMNRuntime", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.KogitoDMNRepository#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRepository.html", "kind" : "class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoDMNResult", "shortDescription" : "", "members_case class" : [{"member" : "com.sparkutils.dmn.kogito.KogitoDMNResult#<init>", "error" : "unsupported entity"}, {"label" : "result", "tail" : ": org.kie.dmn.api.core.DMNResult", "member" : "com.sparkutils.dmn.kogito.KogitoDMNResult.result", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#result:org.kie.dmn.api.core.DMNResult", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNResult.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoDMNRuntime", "shortDescription" : "", "members_case class" : [{"label" : "context", "tail" : "(): DMNContext", "member" : "com.sparkutils.dmn.kogito.KogitoDMNRuntime.context", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#context():com.sparkutils.dmn.DMNContext", "kind" : "def"}, {"label" : "getModel", "tail" : "(name: String, namespace: String): DMNModel", "member" : "com.sparkutils.dmn.kogito.KogitoDMNRuntime.getModel", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#getModel(name:String,namespace:String):com.sparkutils.dmn.DMNModel", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.KogitoDMNRuntime#<init>", "error" : "unsupported entity"}, {"label" : "runtime", "tail" : ": org.kie.dmn.api.core.DMNRuntime", "member" : "com.sparkutils.dmn.kogito.KogitoDMNRuntime.runtime", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#runtime:org.kie.dmn.api.core.DMNRuntime", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoDMNRuntime.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoFeelEvent", "shortDescription" : "", "members_case class" : [{"member" : "com.sparkutils.dmn.kogito.KogitoFeelEvent#<init>", "error" : "unsupported entity"}, {"label" : "offendingSymbol", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoFeelEvent.offendingSymbol", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#offendingSymbol:String", "kind" : "val"}, {"label" : "sourceException", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoFeelEvent.sourceException", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#sourceException:String", "kind" : "val"}, {"label" : "column", "tail" : ": Int", "member" : "com.sparkutils.dmn.kogito.KogitoFeelEvent.column", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#column:Int", "kind" : "val"}, {"label" : "line", "tail" : ": Int", "member" : "com.sparkutils.dmn.kogito.KogitoFeelEvent.line", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#line:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoFeelEvent.message", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#message:String", "kind" : "val"}, {"label" : "severity", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoFeelEvent.severity", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#severity:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoFeelEvent.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider", "shortDescription" : "", "members_case class" : [{"label" : "resultType", "tail" : ": Class[Map[String, AnyRef]]", "member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider.resultType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#resultType:Class[java.util.Map[String,Object]]", "kind" : "val"}, {"label" : "codeGen", "tail" : "(inputStreamReaderVal: String, ctx: CodegenContext): String", "member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider.codeGen", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#codeGen(inputStreamReaderVal:String,ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):String", "kind" : "def"}, {"label" : "readValue", "tail" : "(str: String): Map[String, AnyRef]", "member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider.readValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#readValue(str:String):java.util.Map[String,Object]", "kind" : "def"}, {"label" : "withNewChildInternal", "tail" : "(newChild: Expression): Expression", "member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider.withNewChildInternal", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#withNewChildInternal(newChild:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "mapper", "tail" : ": ObjectMapper", "member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider.mapper", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#mapper:sparkutilsKogito.com.fasterxml.jackson.databind.ObjectMapper", "kind" : "lazy val"}, {"member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider#<init>", "error" : "unsupported entity"}, {"label" : "child", "tail" : ": Expression", "member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider.child", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#child:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "stillSetWhenNull", "tail" : ": Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider.stillSetWhenNull", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#stillSetWhenNull:Boolean", "kind" : "val"}, {"label" : "contextPath", "tail" : ": DMNContextPath", "member" : "com.sparkutils.dmn.kogito.KogitoJSONContextProvider.contextPath", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#contextPath:com.sparkutils.dmn.DMNContextPath", "kind" : "val"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "com.sparkutils.dmn.impl.StringWithIOProcessorContextProvider.doGenCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "nullSafeContextEval", "tail" : "(input: Any): Any", "member" : "com.sparkutils.dmn.impl.StringWithIOProcessorContextProvider.nullSafeContextEval", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#nullSafeContextEval(input:Any):Any", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "com.sparkutils.dmn.UnaryDMNContextProvider.eval", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "genContext", "tail" : "(ctx: CodegenContext): (String, String)", "member" : "com.sparkutils.dmn.DMNContextProvider.genContext", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#genContext(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):(String,String)", "kind" : "def"}, {"label" : "nullSafeContextCodeGen", "tail" : "(child: Expression, ctx: CodegenContext, ev: ExprCode, contextPath: String, f: (String) ⇒ String): ExprCode", "member" : "com.sparkutils.dmn.DMNContextProvider.nullSafeContextCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#nullSafeContextCodeGen(child:org.apache.spark.sql.catalyst.expressions.Expression,ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,contextPath:String,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "nullSafeContextEval", "tail" : "(child: Expression, input: Any): Any", "member" : "com.sparkutils.dmn.DMNContextProvider.nullSafeContextEval", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#nullSafeContextEval(child:org.apache.spark.sql.catalyst.expressions.Expression,input:Any):Any", "kind" : "def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.DMNContextProvider.foldable", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#foldable:Boolean", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "com.sparkutils.dmn.DMNContextProvider.dataType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "nullSafeCodeGen", "tail" : "(ctx: CodegenContext, ev: ExprCode, f: (String) ⇒ String): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.nullSafeCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#nullSafeCodeGen(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "defineCodeGen", "tail" : "(ctx: CodegenContext, ev: ExprCode, f: (String) ⇒ String): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.defineCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#defineCodeGen(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "nullSafeEval", "tail" : "(input: Any): Any", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.nullSafeEval", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#nullSafeEval(input:Any):Any", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.nullable", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#nullable:Boolean", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.withNewChildrenInternal", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "final def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.mapChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.UnaryLike.children", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#children:Seq[T]", "kind" : "final lazy val"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONContextProvider.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider", "shortDescription" : "", "members_case class" : [{"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.doGenCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "process", "tail" : "(result: org.kie.dmn.api.core.DMNResult): Any", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.process", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#process(result:org.kie.dmn.api.core.DMNResult):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.dataType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.eval", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.nullable", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#nullable:Boolean", "kind" : "def"}, {"label" : "mapper", "tail" : ": ObjectMapper", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.mapper", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#mapper:sparkutilsKogito.com.fasterxml.jackson.databind.ObjectMapper", "kind" : "lazy val"}, {"label" : "underlyingType", "tail" : "(): StructType", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.underlyingType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#underlyingType:org.apache.spark.sql.types.StructType", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": Map[String, String]", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.config", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#config:Map[String,String]", "kind" : "val"}, {"label" : "debug", "tail" : ": Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoJSONResultProvider.debug", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#debug:Boolean", "kind" : "val"}, {"label" : "decisionMap", "tail" : "(ctx: CodegenContext, decisionResults: String, fullProxy: Boolean): ExprCode", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.decisionMap", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#decisionMap(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,decisionResults:String,fullProxy:Boolean):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "kogitoResultStr", "tail" : "(): String", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.kogitoResultStr", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#kogitoResultStr:String", "kind" : "def"}, {"label" : "process", "tail" : "(dmnResult: DMNResult): Any", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.process", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#process(dmnResult:com.sparkutils.dmn.DMNResult):Any", "kind" : "def"}, {"label" : "debugDDL", "tail" : ": ArrayType", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.debugDDL", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#debugDDL:org.apache.spark.sql.types.ArrayType", "kind" : "val"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.withNewChildrenInternal", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.mapChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.children", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#children:Seq[T]", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoJSONResultProvider.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoMessage", "shortDescription" : "", "members_case class" : [{"member" : "com.sparkutils.dmn.kogito.KogitoMessage#<init>", "error" : "unsupported entity"}, {"label" : "feelEvent", "tail" : ": KogitoFeelEvent", "member" : "com.sparkutils.dmn.kogito.KogitoMessage.feelEvent", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#feelEvent:com.sparkutils.dmn.kogito.KogitoFeelEvent", "kind" : "val"}, {"label" : "exception", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoMessage.exception", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#exception:String", "kind" : "val"}, {"label" : "sourceReference", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoMessage.sourceReference", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#sourceReference:String", "kind" : "val"}, {"label" : "sourceId", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoMessage.sourceId", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#sourceId:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoMessage.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.KogitoProcess", "members_trait" : [{"label" : "decisionMap", "tail" : "(ctx: CodegenContext, decisionResults: String, fullProxy: Boolean): ExprCode", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.decisionMap", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#decisionMap(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,decisionResults:String,fullProxy:Boolean):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "kogitoResultStr", "tail" : "(): String", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.kogitoResultStr", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#kogitoResultStr:String", "kind" : "def"}, {"label" : "process", "tail" : "(dmnResult: DMNResult): Any", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.process", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#process(dmnResult:com.sparkutils.dmn.DMNResult):Any", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.dataType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "debugDDL", "tail" : ": ArrayType", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.debugDDL", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#debugDDL:org.apache.spark.sql.types.ArrayType", "kind" : "val"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.nullable", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#nullable:Boolean", "kind" : "def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.foldable", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#foldable:Boolean", "kind" : "def"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) ⇒ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) ⇒ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "config", "tail" : ": Map[String, String]", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.config", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#config:Map[String,String]", "kind" : "abstract val"}, {"label" : "process", "tail" : "(result: org.kie.dmn.api.core.DMNResult): Any", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.process", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#process(result:org.kie.dmn.api.core.DMNResult):Any", "kind" : "abstract def"}, {"label" : "underlyingType", "tail" : "(): StructType", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.underlyingType", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#underlyingType:org.apache.spark.sql.types.StructType", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoProcess.debug", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#debug:Boolean", "kind" : "abstract def"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.doGenCode", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.eval", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "abstract def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildrenInternal", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#withNewChildrenInternal(newChildren:IndexedSeq[BaseType]):BaseType", "kind" : "abstract def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.children", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#children:Seq[BaseType]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/sparkutils\/dmn\/kogito\/KogitoProcess.html", "kind" : "trait"}, {"name" : "com.sparkutils.dmn.kogito.KogitoResult", "shortDescription" : "Represents the DDL provider output type for debugMode", "members_case class" : [{"member" : "com.sparkutils.dmn.kogito.KogitoResult#<init>", "error" : "unsupported entity"}, {"label" : "evaluationStatus", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoResult.evaluationStatus", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#evaluationStatus:String", "kind" : "val"}, {"label" : "messages", "tail" : ": Seq[KogitoMessage]", "member" : "com.sparkutils.dmn.kogito.KogitoResult.messages", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#messages:Seq[com.sparkutils.dmn.kogito.KogitoMessage]", "kind" : "val"}, {"label" : "hasErrors", "tail" : ": Boolean", "member" : "com.sparkutils.dmn.kogito.KogitoResult.hasErrors", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#hasErrors:Boolean", "kind" : "val"}, {"label" : "decisionName", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoResult.decisionName", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#decisionName:String", "kind" : "val"}, {"label" : "decisionId", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.KogitoResult.decisionId", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#decisionId:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/sparkutils\/dmn\/kogito\/KogitoResult.html", "kind" : "case class"}, {"name" : "com.sparkutils.dmn.kogito.Types", "shortDescription" : "", "object" : "com\/sparkutils\/dmn\/kogito\/Types$.html", "members_object" : [{"label" : "MAP", "tail" : "", "member" : "com.sparkutils.dmn.kogito.Types.MAP", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#MAP=java.util.Map[String,Object]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/Types$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.sparkutils" : [], "com.sparkutils.dmn.kogito.types" : [{"name" : "com.sparkutils.dmn.kogito.types.ArrayEntry", "shortDescription" : "", "members_class" : [{"label" : "setValue", "tail" : "(value: V): V", "member" : "com.sparkutils.dmn.kogito.types.ArrayEntry.setValue", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#setValue(value:V):V", "kind" : "def"}, {"label" : "getValue", "tail" : "(): V", "member" : "com.sparkutils.dmn.kogito.types.ArrayEntry.getValue", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#getValue():V", "kind" : "def"}, {"label" : "getKey", "tail" : "(): K", "member" : "com.sparkutils.dmn.kogito.types.ArrayEntry.getKey", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#getKey():K", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.types.ArrayEntry#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/sparkutils\/dmn\/kogito\/types\/ArrayEntry.html", "kind" : "class"}, {"name" : "com.sparkutils.dmn.kogito.types.Arrays", "shortDescription" : "", "object" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html", "members_object" : [{"label" : "exprCode", "tail" : "(boxed: Class[_], ctx: CodegenContext, code: Block, cast: Boolean): ExprCode", "member" : "com.sparkutils.dmn.kogito.types.Arrays.exprCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#exprCode(boxed:Class[_],ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,code:org.apache.spark.sql.catalyst.expressions.codegen.Block,cast:Boolean):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "exprCode", "tail" : "(clazz: Class[_], ctx: CodegenContext): ExprCode", "member" : "com.sparkutils.dmn.kogito.types.Arrays.exprCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#exprCode(clazz:Class[_],ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/Arrays$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.sparkutils.dmn.kogito.types.ArraySet", "shortDescription" : "", "members_class" : [{"label" : "clear", "tail" : "(): Unit", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.clear", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#clear():Unit", "kind" : "def"}, {"label" : "removeAll", "tail" : "(c: Collection[_]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.removeAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#removeAll(c:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "retainAll", "tail" : "(c: Collection[_]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.retainAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#retainAll(c:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "addAll", "tail" : "(c: Collection[_ <: E]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.addAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#addAll(c:java.util.Collection[_<:E]):Boolean", "kind" : "def"}, {"label" : "containsAll", "tail" : "(c: Collection[_]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.containsAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#containsAll(c:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(o: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#remove(o:Any):Boolean", "kind" : "def"}, {"label" : "add", "tail" : "(e: E): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.add", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#add(e:E):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(a: Array[T]): Array[T]", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.toArray", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#toArray[T](a:Array[TwithObject]):Array[TwithObject]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[AnyRef]", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.toArray", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#toArray():Array[AnyRef]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[E]", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.iterator", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#iterator():java.util.Iterator[E]", "kind" : "def"}, {"label" : "contains", "tail" : "(o: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.contains", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#contains(o:Any):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.isEmpty", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.sparkutils.dmn.kogito.types.ArraySet.size", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#size():Int", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.types.ArraySet#<init>", "error" : "unsupported entity"}, {"label" : "spliterator", "tail" : "(): Spliterator[E]", "member" : "java.util.Set.spliterator", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#spliterator():java.util.Spliterator[E]", "kind" : "def"}, {"label" : "parallelStream", "tail" : "(): Stream[E]", "member" : "java.util.Collection.parallelStream", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#parallelStream():java.util.stream.Stream[E]", "kind" : "def"}, {"label" : "stream", "tail" : "(): Stream[E]", "member" : "java.util.Collection.stream", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#stream():java.util.stream.Stream[E]", "kind" : "def"}, {"label" : "removeIf", "tail" : "(arg0: Predicate[_ >: E]): Boolean", "member" : "java.util.Collection.removeIf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#removeIf(x$1:java.util.function.Predicate[_>:E]):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: IntFunction[Array[T]]): Array[T]", "member" : "java.util.Collection.toArray", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#toArray[T](x$1:java.util.function.IntFunction[Array[TwithObject]]):Array[TwithObject]", "kind" : "def"}, {"label" : "forEach", "tail" : "(arg0: Consumer[_ >: E]): Unit", "member" : "java.lang.Iterable.forEach", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#forEach(x$1:java.util.function.Consumer[_>:T]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/sparkutils\/dmn\/kogito\/types\/ArraySet.html", "kind" : "class"}, {"name" : "com.sparkutils.dmn.kogito.types.BaseKogitoMap", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "com.sparkutils.dmn.kogito.types.BaseKogitoMap.size", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#size():Int", "kind" : "def"}, {"label" : "entrySet", "tail" : "(): Set[Entry[String, AnyRef]]", "member" : "com.sparkutils.dmn.kogito.types.BaseKogitoMap.entrySet", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#entrySet():java.util.Set[java.util.Map.Entry[String,Object]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Any): AnyRef", "member" : "com.sparkutils.dmn.kogito.types.BaseKogitoMap.get", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#get(key:Any):AnyRef", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.types.BaseKogitoMap#<init>", "error" : "unsupported entity"}, {"label" : "clear", "tail" : "(): Unit", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.clear", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#clear():Unit", "kind" : "def"}, {"label" : "putAll", "tail" : "(m: Map[_ <: String, _ <: AnyRef]): Unit", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.putAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#putAll(m:java.util.Map[_<:String,_<:Object]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Any): AnyRef", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#remove(key:Any):AnyRef", "kind" : "def"}, {"label" : "put", "tail" : "(key: String, value: AnyRef): AnyRef", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.put", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#put(key:String,value:Object):AnyRef", "kind" : "def"}, {"label" : "values", "tail" : "(): Collection[AnyRef]", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.values", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#values():java.util.Collection[Object]", "kind" : "def"}, {"label" : "containsValue", "tail" : "(value: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.containsValue", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#containsValue(value:Any):Boolean", "kind" : "def"}, {"label" : "containsKey", "tail" : "(key: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.containsKey", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#containsKey(key:Any):Boolean", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[String]", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.keySet", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#keySet():java.util.Set[String]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.isEmpty", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "merge", "tail" : "(arg0: String, arg1: AnyRef, arg2: BiFunction[_ >: AnyRef, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.merge", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#merge(x$1:K,x$2:V,x$3:java.util.function.BiFunction[_>:V,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "compute", "tail" : "(arg0: String, arg1: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.compute", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#compute(x$1:K,x$2:java.util.function.BiFunction[_>:K,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "computeIfPresent", "tail" : "(arg0: String, arg1: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.computeIfPresent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#computeIfPresent(x$1:K,x$2:java.util.function.BiFunction[_>:K,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "computeIfAbsent", "tail" : "(arg0: String, arg1: Function[_ >: String, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.computeIfAbsent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#computeIfAbsent(x$1:K,x$2:java.util.function.Function[_>:K,_<:V]):V", "kind" : "def"}, {"label" : "replace", "tail" : "(arg0: String, arg1: AnyRef): AnyRef", "member" : "java.util.Map.replace", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#replace(x$1:K,x$2:V):V", "kind" : "def"}, {"label" : "replace", "tail" : "(arg0: String, arg1: AnyRef, arg2: AnyRef): Boolean", "member" : "java.util.Map.replace", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#replace(x$1:K,x$2:V,x$3:V):Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(arg0: Any, arg1: Any): Boolean", "member" : "java.util.Map.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#remove(x$1:Any,x$2:Any):Boolean", "kind" : "def"}, {"label" : "putIfAbsent", "tail" : "(arg0: String, arg1: AnyRef): AnyRef", "member" : "java.util.Map.putIfAbsent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#putIfAbsent(x$1:K,x$2:V):V", "kind" : "def"}, {"label" : "replaceAll", "tail" : "(arg0: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): Unit", "member" : "java.util.Map.replaceAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#replaceAll(x$1:java.util.function.BiFunction[_>:K,_>:V,_<:V]):Unit", "kind" : "def"}, {"label" : "forEach", "tail" : "(arg0: BiConsumer[_ >: String, _ >: AnyRef]): Unit", "member" : "java.util.Map.forEach", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#forEach(x$1:java.util.function.BiConsumer[_>:K,_>:V]):Unit", "kind" : "def"}, {"label" : "getOrDefault", "tail" : "(arg0: Any, arg1: AnyRef): AnyRef", "member" : "java.util.Map.getOrDefault", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#getOrDefault(x$1:Any,x$2:V):V", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/sparkutils\/dmn\/kogito\/types\/BaseKogitoMap.html", "kind" : "class"}, {"name" : "com.sparkutils.dmn.kogito.types.ContextInterfaces", "shortDescription" : "", "object" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html", "members_object" : [{"label" : "struct", "tail" : "(pairs: Map[String, (Int, Accessor[_])]): Accessor[Map[String, AnyRef]]", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.struct", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#struct(pairs:Map[String,(Int,com.sparkutils.dmn.kogito.types.ContextInterfaces.Accessor[_])]):com.sparkutils.dmn.kogito.types.ContextInterfaces.Accessor[java.util.Map[String,Object]]", "kind" : "def"}, {"label" : "ComplexContextProvider", "tail" : "", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.ComplexContextProvider", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#ComplexContextProvider[T]extendsUnaryExpressionwithUnaryDMNContextProvider[T]withProductwithSerializable", "kind" : "case class"}, {"label" : "structProvider", "tail" : "(structType: StructType, path: DMNContextPath, expr: Expression, stillSetWhenNull: Boolean, dmnConfiguration: Map[String, String]): DMNContextProvider[Map[String, AnyRef]]", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.structProvider", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#structProvider(structType:org.apache.spark.sql.types.StructType,path:com.sparkutils.dmn.DMNContextPath,expr:org.apache.spark.sql.catalyst.expressions.Expression,stillSetWhenNull:Boolean,dmnConfiguration:Map[String,String]):com.sparkutils.dmn.DMNContextProvider[java.util.Map[String,Object]]", "kind" : "def"}, {"label" : "arrayProvider", "tail" : "(arrayType: ArrayType, path: DMNContextPath, expr: Expression, stillSetWhenNull: Boolean, dmnConfiguration: Map[String, String]): DMNContextProvider[List[AnyRef]]", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.arrayProvider", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#arrayProvider(arrayType:org.apache.spark.sql.types.ArrayType,path:com.sparkutils.dmn.DMNContextPath,expr:org.apache.spark.sql.catalyst.expressions.Expression,stillSetWhenNull:Boolean,dmnConfiguration:Map[String,String]):com.sparkutils.dmn.DMNContextProvider[java.util.List[Object]]", "kind" : "def"}, {"label" : "mapProvider", "tail" : "(mapType: MapType, path: DMNContextPath, expr: Expression, stillSetWhenNull: Boolean, dmnConfiguration: Map[String, String]): DMNContextProvider[Map[String, AnyRef]]", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.mapProvider", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#mapProvider(mapType:org.apache.spark.sql.types.MapType,path:com.sparkutils.dmn.DMNContextPath,expr:org.apache.spark.sql.catalyst.expressions.Expression,stillSetWhenNull:Boolean,dmnConfiguration:Map[String,String]):com.sparkutils.dmn.DMNContextProvider[java.util.Map[String,Object]]", "kind" : "def"}, {"label" : "forTypeCodeGen", "tail" : "(dataType: DataType, inCollection: Boolean, dmnConfiguration: Map[String, String], topLevel: Boolean): AccessorCodeGen", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.forTypeCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#forTypeCodeGen(dataType:org.apache.spark.sql.types.DataType,inCollection:Boolean,dmnConfiguration:Map[String,String],topLevel:Boolean):com.sparkutils.dmn.kogito.types.ContextInterfaces.AccessorCodeGen", "kind" : "def"}, {"label" : "AccessorCodeGen", "tail" : "", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.AccessorCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#AccessorCodeGenextendsSerializable", "kind" : "trait"}, {"label" : "forType", "tail" : "(dataType: DataType, dmnConfiguration: Map[String, String]): Accessor[_]", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.forType", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#forType(dataType:org.apache.spark.sql.types.DataType,dmnConfiguration:Map[String,String]):com.sparkutils.dmn.kogito.types.ContextInterfaces.Accessor[_]", "kind" : "def"}, {"label" : "Accessor", "tail" : "", "member" : "com.sparkutils.dmn.kogito.types.ContextInterfaces.Accessor", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#Accessor[T]extendsSerializable", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ContextInterfaces$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.sparkutils.dmn.kogito.types.DecisionResultFullProxyEntry", "shortDescription" : "", "members_class" : [{"label" : "get", "tail" : "(i: Int, t: List[DMNDecisionResult]): Entry[String, AnyRef]", "member" : "com.sparkutils.dmn.kogito.types.DecisionResultFullProxyEntry.get", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#get(i:Int,t:java.util.List[org.kie.dmn.api.core.DMNDecisionResult]):java.util.Map.Entry[String,Object]", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.types.DecisionResultFullProxyEntry#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/sparkutils\/dmn\/kogito\/types\/DecisionResultFullProxyEntry.html", "kind" : "class"}, {"name" : "com.sparkutils.dmn.kogito.types.ProxyEntry", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(i: Int, t: T): Entry[String, AnyRef]", "member" : "com.sparkutils.dmn.kogito.types.ProxyEntry.get", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html#get(i:Int,t:T):java.util.Map.Entry[String,Object]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyEntry.html", "kind" : "trait"}, {"name" : "com.sparkutils.dmn.kogito.types.ProxyIterator", "shortDescription" : "", "members_class" : [{"label" : "next", "tail" : "(): Entry[String, AnyRef]", "member" : "com.sparkutils.dmn.kogito.types.ProxyIterator.next", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#next():java.util.Map.Entry[String,Object]", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxyIterator.hasNext", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#hasNext():Boolean", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "com.sparkutils.dmn.kogito.types.ProxyIterator.reset", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#reset():Unit", "kind" : "def"}, {"label" : "i", "tail" : ": Int", "member" : "com.sparkutils.dmn.kogito.types.ProxyIterator.i", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#i:Int", "kind" : "var"}, {"member" : "com.sparkutils.dmn.kogito.types.ProxyIterator#<init>", "error" : "unsupported entity"}, {"label" : "forEachRemaining", "tail" : "(arg0: Consumer[_ >: Entry[String, AnyRef]]): Unit", "member" : "java.util.Iterator.forEachRemaining", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#forEachRemaining(x$1:java.util.function.Consumer[_>:E]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "java.util.Iterator.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#remove():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyIterator.html", "kind" : "class"}, {"name" : "com.sparkutils.dmn.kogito.types.ProxyMap", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "com.sparkutils.dmn.kogito.types.ProxyMap.size", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#size():Int", "kind" : "def"}, {"label" : "entrySet", "tail" : "(): Set[Entry[String, AnyRef]]", "member" : "com.sparkutils.dmn.kogito.types.ProxyMap.entrySet", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#entrySet():java.util.Set[java.util.Map.Entry[String,Object]]", "kind" : "def"}, {"label" : "proxySet", "tail" : ": ProxySet[T]", "member" : "com.sparkutils.dmn.kogito.types.ProxyMap.proxySet", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#proxySet:com.sparkutils.dmn.kogito.types.ProxySet[T]", "kind" : "val"}, {"label" : "get", "tail" : "(key: Any): AnyRef", "member" : "com.sparkutils.dmn.kogito.types.ProxyMap.get", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#get(key:Any):AnyRef", "kind" : "def"}, {"label" : "reset", "tail" : "(size: Int, _t: T): Unit", "member" : "com.sparkutils.dmn.kogito.types.ProxyMap.reset", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#reset(size:Int,_t:T):Unit", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.types.ProxyMap#<init>", "error" : "unsupported entity"}, {"label" : "proxyEntry", "tail" : ": ProxyEntry[T]", "member" : "com.sparkutils.dmn.kogito.types.ProxyMap.proxyEntry", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#proxyEntry:com.sparkutils.dmn.kogito.types.ProxyEntry[T]", "kind" : "val"}, {"label" : "t", "tail" : ": T", "member" : "com.sparkutils.dmn.kogito.types.ProxyMap.t", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#t:T", "kind" : "var"}, {"label" : "_size", "tail" : ": Int", "member" : "com.sparkutils.dmn.kogito.types.ProxyMap._size", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#_size:Int", "kind" : "var"}, {"label" : "clear", "tail" : "(): Unit", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.clear", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#clear():Unit", "kind" : "def"}, {"label" : "putAll", "tail" : "(m: Map[_ <: String, _ <: AnyRef]): Unit", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.putAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#putAll(m:java.util.Map[_<:String,_<:Object]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Any): AnyRef", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#remove(key:Any):AnyRef", "kind" : "def"}, {"label" : "put", "tail" : "(key: String, value: AnyRef): AnyRef", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.put", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#put(key:String,value:Object):AnyRef", "kind" : "def"}, {"label" : "values", "tail" : "(): Collection[AnyRef]", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.values", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#values():java.util.Collection[Object]", "kind" : "def"}, {"label" : "containsValue", "tail" : "(value: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.containsValue", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#containsValue(value:Any):Boolean", "kind" : "def"}, {"label" : "containsKey", "tail" : "(key: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.containsKey", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#containsKey(key:Any):Boolean", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[String]", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.keySet", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#keySet():java.util.Set[String]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.isEmpty", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "merge", "tail" : "(arg0: String, arg1: AnyRef, arg2: BiFunction[_ >: AnyRef, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.merge", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#merge(x$1:K,x$2:V,x$3:java.util.function.BiFunction[_>:V,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "compute", "tail" : "(arg0: String, arg1: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.compute", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#compute(x$1:K,x$2:java.util.function.BiFunction[_>:K,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "computeIfPresent", "tail" : "(arg0: String, arg1: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.computeIfPresent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#computeIfPresent(x$1:K,x$2:java.util.function.BiFunction[_>:K,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "computeIfAbsent", "tail" : "(arg0: String, arg1: Function[_ >: String, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.computeIfAbsent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#computeIfAbsent(x$1:K,x$2:java.util.function.Function[_>:K,_<:V]):V", "kind" : "def"}, {"label" : "replace", "tail" : "(arg0: String, arg1: AnyRef): AnyRef", "member" : "java.util.Map.replace", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#replace(x$1:K,x$2:V):V", "kind" : "def"}, {"label" : "replace", "tail" : "(arg0: String, arg1: AnyRef, arg2: AnyRef): Boolean", "member" : "java.util.Map.replace", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#replace(x$1:K,x$2:V,x$3:V):Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(arg0: Any, arg1: Any): Boolean", "member" : "java.util.Map.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#remove(x$1:Any,x$2:Any):Boolean", "kind" : "def"}, {"label" : "putIfAbsent", "tail" : "(arg0: String, arg1: AnyRef): AnyRef", "member" : "java.util.Map.putIfAbsent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#putIfAbsent(x$1:K,x$2:V):V", "kind" : "def"}, {"label" : "replaceAll", "tail" : "(arg0: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): Unit", "member" : "java.util.Map.replaceAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#replaceAll(x$1:java.util.function.BiFunction[_>:K,_>:V,_<:V]):Unit", "kind" : "def"}, {"label" : "forEach", "tail" : "(arg0: BiConsumer[_ >: String, _ >: AnyRef]): Unit", "member" : "java.util.Map.forEach", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#forEach(x$1:java.util.function.BiConsumer[_>:K,_>:V]):Unit", "kind" : "def"}, {"label" : "getOrDefault", "tail" : "(arg0: Any, arg1: AnyRef): AnyRef", "member" : "java.util.Map.getOrDefault", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#getOrDefault(x$1:Any,x$2:V):V", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/sparkutils\/dmn\/kogito\/types\/ProxyMap.html", "kind" : "class"}, {"name" : "com.sparkutils.dmn.kogito.types.ProxySet", "shortDescription" : "", "members_class" : [{"label" : "addAll", "tail" : "(c: Collection[_ <: Entry[String, AnyRef]]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.addAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#addAll(c:java.util.Collection[_<:java.util.Map.Entry[String,Object]]):Boolean", "kind" : "def"}, {"label" : "containsAll", "tail" : "(c: Collection[_]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.containsAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#containsAll(c:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(o: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#remove(o:Any):Boolean", "kind" : "def"}, {"label" : "add", "tail" : "(e: Entry[String, AnyRef]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.add", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#add(e:java.util.Map.Entry[String,Object]):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(a: Array[T]): Array[T]", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.toArray", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#toArray[T](a:Array[TwithObject]):Array[TwithObject]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[AnyRef]", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.toArray", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#toArray():Array[AnyRef]", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.clear", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#clear():Unit", "kind" : "def"}, {"label" : "removeAll", "tail" : "(c: Collection[_]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.removeAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#removeAll(c:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "retainAll", "tail" : "(c: Collection[_]): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.retainAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#retainAll(c:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Entry[String, AnyRef]]", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.iterator", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#iterator():java.util.Iterator[java.util.Map.Entry[String,Object]]", "kind" : "def"}, {"label" : "itr", "tail" : ": ProxyIterator[E]", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.itr", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#itr:com.sparkutils.dmn.kogito.types.ProxyIterator[E]", "kind" : "val"}, {"label" : "contains", "tail" : "(o: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.contains", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#contains(o:Any):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.isEmpty", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.sparkutils.dmn.kogito.types.ProxySet.size", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#size():Int", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.types.ProxySet#<init>", "error" : "unsupported entity"}, {"label" : "spliterator", "tail" : "(): Spliterator[Entry[String, AnyRef]]", "member" : "java.util.Set.spliterator", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#spliterator():java.util.Spliterator[E]", "kind" : "def"}, {"label" : "parallelStream", "tail" : "(): Stream[Entry[String, AnyRef]]", "member" : "java.util.Collection.parallelStream", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#parallelStream():java.util.stream.Stream[E]", "kind" : "def"}, {"label" : "stream", "tail" : "(): Stream[Entry[String, AnyRef]]", "member" : "java.util.Collection.stream", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#stream():java.util.stream.Stream[E]", "kind" : "def"}, {"label" : "removeIf", "tail" : "(arg0: Predicate[_ >: Entry[String, AnyRef]]): Boolean", "member" : "java.util.Collection.removeIf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#removeIf(x$1:java.util.function.Predicate[_>:E]):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: IntFunction[Array[T]]): Array[T]", "member" : "java.util.Collection.toArray", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#toArray[T](x$1:java.util.function.IntFunction[Array[TwithObject]]):Array[TwithObject]", "kind" : "def"}, {"label" : "forEach", "tail" : "(arg0: Consumer[_ >: Entry[String, AnyRef]]): Unit", "member" : "java.lang.Iterable.forEach", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#forEach(x$1:java.util.function.Consumer[_>:T]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/sparkutils\/dmn\/kogito\/types\/ProxySet.html", "kind" : "class"}, {"name" : "com.sparkutils.dmn.kogito.types.ResultInterfaces", "shortDescription" : "Reverse the logic from ContextInterfaces", "object" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html", "members_object" : [{"label" : "forTypeCodeGen", "tail" : "(dataType: DataType): GetterCodeGen", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.forTypeCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#forTypeCodeGen(dataType:org.apache.spark.sql.types.DataType):com.sparkutils.dmn.kogito.types.ResultInterfaces.GetterCodeGen", "kind" : "def"}, {"label" : "nullOr", "tail" : "(f: (String) ⇒ String)(arg0: ClassTag[T]): GetterCodeGen", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.nullOr", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#nullOr[T](f:String=>String)(implicitevidence$1:scala.reflect.ClassTag[T]):com.sparkutils.dmn.kogito.types.ResultInterfaces.GetterCodeGen", "kind" : "def"}, {"label" : "GetterCodeGen", "tail" : "", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.GetterCodeGen", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#GetterCodeGenextendsSerializable", "kind" : "trait"}, {"label" : "forType", "tail" : "(dataType: DataType): Getter", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.forType", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#forType(dataType:org.apache.spark.sql.types.DataType):com.sparkutils.dmn.kogito.types.ResultInterfaces.Getter", "kind" : "def"}, {"label" : "Getter", "tail" : "", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.Getter", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#GetterextendsAnyRef", "kind" : "trait"}, {"label" : "FAILED", "tail" : ": Byte", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.FAILED", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#FAILED:Byte", "kind" : "val"}, {"label" : "SKIPPED_ERROR", "tail" : ": Byte", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.SKIPPED_ERROR", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#SKIPPED_ERROR:Byte", "kind" : "val"}, {"label" : "SKIPPED_WARN", "tail" : ": Byte", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.SKIPPED_WARN", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#SKIPPED_WARN:Byte", "kind" : "val"}, {"label" : "SUCCEEDED", "tail" : ": Byte", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.SUCCEEDED", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#SUCCEEDED:Byte", "kind" : "val"}, {"label" : "EVALUATING", "tail" : ": Byte", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.EVALUATING", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#EVALUATING:Byte", "kind" : "val"}, {"label" : "NOT_EVALUATED", "tail" : ": Byte", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.NOT_EVALUATED", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#NOT_EVALUATED:Byte", "kind" : "val"}, {"label" : "NOT_FOUND", "tail" : ": Byte", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.NOT_FOUND", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#NOT_FOUND:Byte", "kind" : "val"}, {"label" : "evalStatusEnding", "tail" : ": String", "member" : "com.sparkutils.dmn.kogito.types.ResultInterfaces.evalStatusEnding", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#evalStatusEnding:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/ResultInterfaces$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.sparkutils.dmn.kogito.types.SimpleMap", "shortDescription" : "", "members_class" : [{"label" : "clear", "tail" : "(): Unit", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.clear", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#clear():Unit", "kind" : "def"}, {"label" : "putAll", "tail" : "(m: Map[_ <: String, _ <: AnyRef]): Unit", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.putAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#putAll(m:java.util.Map[_<:String,_<:Object]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Any): AnyRef", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#remove(key:Any):AnyRef", "kind" : "def"}, {"label" : "put", "tail" : "(key: String, value: AnyRef): AnyRef", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.put", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#put(key:String,value:Object):AnyRef", "kind" : "def"}, {"label" : "values", "tail" : "(): Collection[AnyRef]", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.values", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#values():java.util.Collection[Object]", "kind" : "def"}, {"label" : "containsValue", "tail" : "(value: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.containsValue", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#containsValue(value:Any):Boolean", "kind" : "def"}, {"label" : "containsKey", "tail" : "(key: Any): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.containsKey", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#containsKey(key:Any):Boolean", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[String]", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.keySet", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#keySet():java.util.Set[String]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "com.sparkutils.dmn.kogito.types.SimpleMap.isEmpty", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#isEmpty():Boolean", "kind" : "def"}, {"member" : "com.sparkutils.dmn.kogito.types.SimpleMap#<init>", "error" : "unsupported entity"}, {"label" : "merge", "tail" : "(arg0: String, arg1: AnyRef, arg2: BiFunction[_ >: AnyRef, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.merge", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#merge(x$1:K,x$2:V,x$3:java.util.function.BiFunction[_>:V,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "compute", "tail" : "(arg0: String, arg1: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.compute", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#compute(x$1:K,x$2:java.util.function.BiFunction[_>:K,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "computeIfPresent", "tail" : "(arg0: String, arg1: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.computeIfPresent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#computeIfPresent(x$1:K,x$2:java.util.function.BiFunction[_>:K,_>:V,_<:V]):V", "kind" : "def"}, {"label" : "computeIfAbsent", "tail" : "(arg0: String, arg1: Function[_ >: String, _ <: AnyRef]): AnyRef", "member" : "java.util.Map.computeIfAbsent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#computeIfAbsent(x$1:K,x$2:java.util.function.Function[_>:K,_<:V]):V", "kind" : "def"}, {"label" : "replace", "tail" : "(arg0: String, arg1: AnyRef): AnyRef", "member" : "java.util.Map.replace", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#replace(x$1:K,x$2:V):V", "kind" : "def"}, {"label" : "replace", "tail" : "(arg0: String, arg1: AnyRef, arg2: AnyRef): Boolean", "member" : "java.util.Map.replace", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#replace(x$1:K,x$2:V,x$3:V):Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(arg0: Any, arg1: Any): Boolean", "member" : "java.util.Map.remove", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#remove(x$1:Any,x$2:Any):Boolean", "kind" : "def"}, {"label" : "putIfAbsent", "tail" : "(arg0: String, arg1: AnyRef): AnyRef", "member" : "java.util.Map.putIfAbsent", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#putIfAbsent(x$1:K,x$2:V):V", "kind" : "def"}, {"label" : "replaceAll", "tail" : "(arg0: BiFunction[_ >: String, _ >: AnyRef, _ <: AnyRef]): Unit", "member" : "java.util.Map.replaceAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#replaceAll(x$1:java.util.function.BiFunction[_>:K,_>:V,_<:V]):Unit", "kind" : "def"}, {"label" : "forEach", "tail" : "(arg0: BiConsumer[_ >: String, _ >: AnyRef]): Unit", "member" : "java.util.Map.forEach", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#forEach(x$1:java.util.function.BiConsumer[_>:K,_>:V]):Unit", "kind" : "def"}, {"label" : "getOrDefault", "tail" : "(arg0: Any, arg1: AnyRef): AnyRef", "member" : "java.util.Map.getOrDefault", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#getOrDefault(x$1:Any,x$2:V):V", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "entrySet", "tail" : "(): Set[Entry[String, AnyRef]]", "member" : "java.util.Map.entrySet", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#entrySet():java.util.Set[java.util.Map.Entry[K,V]]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(arg0: Any): AnyRef", "member" : "java.util.Map.get", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#get(x$1:Any):V", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "java.util.Map.size", "link" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html#size():Int", "kind" : "abstract def"}], "class" : "com\/sparkutils\/dmn\/kogito\/types\/SimpleMap.html", "kind" : "class"}], "com.sparkutils.dmn" : [], "com" : []};